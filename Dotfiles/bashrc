# If this is a work box, include anything not checked into public source control
if [ -f ~/.bashrc_spot ]; then
    . ~/.bashrc_spot
fi


# Alias definitions, stored in a different file.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Ensure emacs style editing
set -o emacs

# Don't exit the shell when typing Ctrl-d on an empty line
IGNOREEOF=10

# OS X ships with BSD ls rather than GNU ls
# Add color to ls output
if [ "$(uname)" == "Darwin" ]; then
    export CLICOLOR=1
    export LSCOLORS=GxFxCxDxBxegedabagaced
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# OS X boot2docker
#export DOCKER_HOST=tcp://192.168.59.103:2376
#export DOCKER_CERT_PATH=/Users/wtf/.boot2docker/certs/boot2docker-vm
#export DOCKER_TLS_VERIFY=1

# Init boot2docker and quiet output
#$(boot2docker shellinit > /dev/null 2>&1)

export GIT_EDITOR=emacs
export GIT_AUTHOR_NAME="Will Fleming"
export GIT_AUTHOR_EMAIL=wfleming77@gmail.com
export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"

PATH=$PATH:$HOME/bin

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

export PATH="/usr/local/heroku/bin:$PATH"

# Hack to use the Energia bundled msp430-gcc on OS X
export PATH="/Applications/Energia.app/Contents/Resources/Java/hardware/tools/msp430/bin:$PATH"

# Google C++ Mocking Framework
#export GMOCK_HOME=$HOME/bin/gmock-1.6.0
export GMOCK_HOME=$HOME/bin/gmock-1.7.0

# ruby rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"

PATH=$PATH:$HOME/bin/elastic-mapreduce-ruby

# Only run this tmux command in an interactive shell
# since it writes to stdout, which breaks scp
case "$-" in
    # List tmux sessions on login. If none, don't show the error.
    *i*) tmux list-sessions 2> /dev/null
esac

[[ -e ~/.git-completion.bash ]] && source ~/.git-completion.bash
[[ -e ~/.git-prompt.sh ]] && source ~/.git-prompt.sh


MAGENTA="\[\033[0;35m\]"
YELLOW="\[\033[0;33m\]"
BLUE="\[\033[34m\]"
LIGHT_GRAY="\[\033[0;37m\]"
CYAN="\[\033[0;36m\]"
GREEN="\[\033[0;32m\]"
GIT_PS1_SHOWDIRTYSTATE=true
export LS_OPTIONS='--color=auto'
export CLICOLOR='Yes'
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

export PS1=$LIGHT_GRAY"\u@\h"'$(
    if [[ $(__git_ps1) =~ \*\)$ ]]
    # a file has been modified but not added
    then echo "'$YELLOW'"$(__git_ps1 " (%s)")
    elif [[ $(__git_ps1) =~ \+\)$ ]]
    # a file has been added, but not commited
    then echo "'$MAGENTA'"$(__git_ps1 " (%s)")
    # the state is clean, changes are commited
    else echo "'$CYAN'"$(__git_ps1 " (%s)")
    fi)'$BLUE" \w"$GREEN": "


# Erlang and Elixir
export PATH="$HOME/bin/erlang/bin:$PATH"
export PATH="$HOME/bin/elixir/bin:$PATH"

# Android for React Native
# Ubuntu
#export ANDROID_HOME=/home/wtf/Android/Sdk
# OS X
# If you installed the SDK via Homebrew, otherwise ~/Library/Android/sdk
# export ANDROID_HOME=/usr/local/opt/android-sdk
# export ANDROID_NDK="$HOME/bin/android-ndk-r11c"
