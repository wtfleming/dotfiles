(require 'package)
(add-to-list 'package-archives 
  	     '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") t)
(package-initialize)

;(load-theme 'zenburn t)

;;; Packages not available in the repositories
(add-to-list 'load-path "~/.emacs.d/")

; Editing hadoop pig scripts https://github.com/motus/pig-mode
(load "pig-mode.el")

; Only indent 2 spaces for clojure-mode
(setq lisp-indent-offset 2)

; Map C-x C-u to undo
(define-key global-map "\C-x\C-u" 'undo)

; Set font size to 12pt
(set-face-attribute 'default nil :height 120)

; Open .gz, etc files for editing
(auto-compression-mode 1)

;; Emacs shell
; Dont echo passwords 
(add-hook 'comint-output-filter-functions
      'comint-watch-for-password-prompt)

;; Backup files
(setq
   backup-by-copying t      ; don't clobber symlinks
   backup-directory-alist
   '(("." . "~/.saves"))    ; don't litter my fs tree
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control t)       ; use versioned backups


; Ensure line and column numbers are displayed on the mode line
(setq line-number-mode t) ; Default is on for line, but set it anyways
(setq column-number-mode t)



;; Org-mode settings
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)
;(global-font-lock-mode 1) ; all buffers
;(add-hook 'org-mode-hook 'turn-on-font-lock) ; Org buffers only



;;; Paren Mode
(setq show-paren-delay 0) ; how long to wait?
(show-paren-mode t) ; turn paren-mode on
;(setq show-paren-style 'expression) ; alternatives are 'parenthesis' and 'mixed'

;(set-face-background 'show-paren-match-face "#aaaaaa")
;(set-face-attribute 'show-paren-match-face nil 
;        :weight 'bold :underline nil :overline nil :slant 'normal)
;(set-face-foreground 'show-paren-mismatch-face "red") 
;(set-face-attribute 'show-paren-mismatch-face nil 
;                    :weight 'bold :underline t :overline nil :slant 'normal)


;;; Javascript mode
(setq js-indent-level 2)

;; Uniquify
(require 'uniquify)
(setq  uniquify-buffer-name-style 'post-forward-angle-brackets)

;; Save Place
(setq save-place-file "~/.emacs.d/saveplace") ;; keep my ~/ clean
(setq-default save-place t)                   ;; activate it for all buffers
(require 'saveplace)                          ;; get the package

;; Recent Files
(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 25)
(global-set-key "\C-x\ \C-r" 'recentf-open-files)
(setq recentf-save-file "~/.emacs.d/.recentf")


;; Wind Move
; Move point from window to window using meta and the arrow keys,
; rather than having to use C-x o
(windmove-default-keybindings 'meta)


(defun google ()
  "Google the selected region if any, display a query prompt otherwise."
  (interactive)
  (browse-url
   (concat
    "http://www.google.com/search?ie=utf-8&oe=utf-8&q="
    (url-hexify-string (if mark-active
         (buffer-substring (region-beginning) (region-end))
       (read-string "Google: "))))))