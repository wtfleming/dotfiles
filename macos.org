* Misc
Install homebrew
https://brew.sh/

Install dotfiles
https://github.com/wtfleming/dotfiles

Install Fira code
https://github.com/tonsky/FiraCode/wiki/Installing

#+begin_src
brew install tmux wget htop watchman coreutils p7zip tree ncdu ripgrep cmake
#+end_src


* emacs
Build emacs on an ARM Mac from source
#+begin_src
# Note: if building for emacs 29 need to brew install jansson, but not for 30 and newer
brew install gcc libgccjit make gnutls texinfo autoconf pkg-config tree-sitter wxwidgets

# Emacs flyspell needs a spell checking tool, install one on macOS
brew install ispell

# Emacs markdown-mode uses this to preview markdown
brew install pandoc
#+end_src

Download emacs src from https://github.com/emacs-mirror/emacs/tags

Move the entire emacs src directory to ~/bin and make sure that
something like
path+=("$HOME/bin/emacs-emacs-29.4/src")
is in .zshrc

#+begin_src
  ./autogen.sh
#+end_src


Note that emacs 29 requires --with-json but we do not from emacs 30 on

 '--disable-gc-mark-trace'. This disables the GC mark trace buffer for about 5%
 better garbage collection performance.
 Doing so may make it more difficult for Emacs developers to help finding
 GC-related bugs that you run into, which is why the mark trace buffer is
 enabled by default.

 

 #+begin_src
./autogen.sh

# To see configure options run ./configure --help
./configure --with-native-compilation --with-tree-sitter --without-compress-install --disable-gc-mark-trace --with-xwidgets

# Run 'make' to build Emacs, then run 'src/emacs' to test it.
Run 'gmake' to build Emacs, then run 'src/emacs' to test it.

# Run 'gmake install'

# For my config currently need to run these commands
M-x all-the-icons-install-fonts
M-x nerd-icons-install-fonts
#+end_src


You can see what features emacs was built with by looking at variable system-configuration-features


** LLMs with gptel
In ~/.authinfo have the following lines:

#+begin_src
machine api.openai.com login apikey password <api key goes here>
machine api.anthropic.com login apikey password <api key goes here>
#+end_src


* Misc homebrew
#+begin_src sh
  # Python
  brew install uv

  # Clojure things
  brew install borkdude/brew/clj-kondo
  brew install clojure-lsp/brew/clojure-lsp-native
  brew install borkdude/brew/babashka

  # Shell scripts linter
  brew install shellcheck

  # YAML language server
  brew install yaml-language-server

  # Glow is a terminal based markdown reader
  brew install glow

  # Terraform language server
  brew install hashicorp/tap/terraform-ls

  # For erlang installed with asdf
  brew install autoconf
  # For asdf to build Erlang with wxWidgets (start observer or debugger!)
  brew install wxmac

  # For exporting LaTex from emacs
  brew install mactex

#+end_src

* Git
Install dev tools - this is one way to prompt it:
#+begin_src
  git --version

brew install git-lfs
git lfs install
git config --global core.excludesfile ~/.gitexcludes

#+end_src



* Mission Control
Disable mission control since I use those keyboard shortcuts in emacs


Go to System Preferences > Keyboard > Keyboard Shortcuts > Mission Control and change the settings for "Move left a space" and "Move right a space" or disable them completely.
http://apple.stackexchange.com/questions/18043/how-can-i-make-ctrlright-left-arrow-stop-changing-desktops-in-lion

If a japanese keyboard is installed, need to disable Control-space since I use that in emacs a bunch
Go to System Preferences > Keyboard > Keyboard Shortcuts > Input Sources
  Disable the 2 select an input source shortcuts

Go to System Preferences > Keyboard > Dictation > Shortcut
  And change it to not be pressing control twice

* Java

$ brew install openjdk@21
For the system Java wrappers to find this JDK, symlink it with
  sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk

openjdk is keg-only, which means it was not symlinked into /opt/homebrew,
because macOS provides similar software and installing this software in
parallel can cause all kinds of trouble.

If you need to have openjdk first in your PATH, run:
  echo 'export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"' >> ~/.zshrc

For compilers to find openjdk you may need to set:
  export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"

Verify installation
  java -version

** Install Clojure CLI tools
#+begin_src
$ brew install clojure/tools/clojure

$ clj
user=> (+ 1 2)
3

#+end_src

*** Install leiningen
#+begin_src
$ curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > ~/bin/lein
$ chmod a+x ~/bin/lein

# Verify installation
$ lein version

#+end_src


* Docker
https://hub.docker.com/editions/community/docker-ce-desktop-mac

$ docker login
Username is not the default email displayed, look it up by logging into https://hub.docker.com

* awscli
brew install awscli
$ aws configure

* asdf
See https://asdf-vm.com/guide/getting-started.html

brew install coreutils curl git

git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0

Add the following to ~/.zshrc:

. "$HOME/.asdf/asdf.sh"

Completions are configured by either a ZSH Framework asdf plugin or by adding the following to your .zshrc:

#+begin_src
# append completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)
# initialise completions with ZSH's compinit
autoload -Uz compinit && compinit

#+end_src

if you are using a custom compinit setup, ensure compinit is below your sourcing of asdf.sh
if you are using a custom compinit setup with a ZSH Framework, ensure compinit is below your sourcing of the framework

** Erlang/Elixir
#+begin_src
asdf plugin-add erlang
asdf plugin-add elixir

asdf list all elixir
asdf list all erlang


asdf install erlang 25.3.2
asdf global erlang 25.3.2
asdf install elixir 1.14.4-otp-25
asdf global elixir 1.14.4-otp-25


For building with wxWidgets (start observer or debugger!)
brew install wxwidgets

You can test that it worked with
iex> :observer.start()

mix local.rebar --if-missing --force
mix local.hex --if-missing --force

mix archive.install hex phx_new

#+end_src

* Japanese keyboard
System Settings->Keyboard->Text input
  Add Japanese - Romaji source
  Enable "Use Caps Lock key to switch to and from U.S."

* Rust
https://rustup.rs/
https://github.com/rust-lang/rust-analyzer
#+begin_src
$ brew install rust-analyzer
#+end_src


* Tailwind CSS CLI tool
#+begin_src
curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64
chmod +x tailwindcss-macos-arm64
mv tailwindcss-macos-arm64 tailwindcss
#+end_src
